name: CI Workflow

on:
  push:
    branches: [ "master" ]
    paths:
      - '.github/release.json' # 当release.json变化时触发workflow

jobs:
  linux-build-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Extract version information (Linux)
        id: get_version_info
        run: |
          echo "CODE=$(jq -r '.code' < .github/release.json)" >> $GITHUB_ENV
          echo "VERSION=$(jq -r '.version' < .github/release.json)" >> $GITHUB_ENV

      # 获取上一个 tag
      - name: Get previous tag
        id: get_previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: "0.0.1"  # 设置默认的 fallback tag，如果找不到上一个 tag

      - name: Generate signing.properties
        working-directory: NfcAimeReader.Android
        run: |
          ${{ secrets.BASH_DOWNLOAD_JKS }}
          echo "KEYSTORE_FILE = ${{ github.workspace }}/keystore.jks" > app/signing.properties
          echo "KEYSTORE_PASSWORD = ${{ secrets.KEYSTORE_PASSWORD }}" >> app/signing.properties
          echo "KEY_ALIAS = ${{ secrets.KEY_ALIAS }}" >> app/signing.properties
          echo "KEY_PASSWORD = ${{ secrets.KEY_PASSWORD }}" >> app/signing.properties
          cat app/signing.properties

      - name: Grant execute permission for gradlew
        working-directory: NfcAimeReader.Android
        run: chmod +x gradlew

      - name: Build with Gradle
        working-directory: NfcAimeReader.Android
        run: ./gradlew assembleRelease

      - name: Create Release Tag
        run: git tag v${{ env.VERSION }}

      - name: Push Tag
        run: git push origin v${{ env.VERSION }}

      - name: Rename APK
        working-directory: NfcAimeReader.Android
        run: mv app/release/app-release.apk NfcAimeReader_v${{ env.VERSION }}.apk

      - name: Calculate APK hash (MD5 and SHA1)
        id: apk_hash
        run: |
          echo "MD5=$(md5sum NfcAimeReader_v${{ env.VERSION }}.apk | awk '{ print $1 }')" >> $GITHUB_ENV
          echo "SHA1=$(sha1sum NfcAimeReader_v${{ env.VERSION }}.apk | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          draft: true
          body: |
            ### Checksum
            | File | NfcAimeReader_v${{ env.VERSION }}.apk |
            | ---- | ------------------------------------ |
            | MD5 | ${{ env.MD5 }} |
            | SHA1 | ${{ env.SHA1 }} |

            [View changes on GitHub](https://github.com/ohdj/NfcAimeReader/compare/v${{ steps.get_previous_tag.outputs.tag }}...v${{ env.VERSION }})

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NfcAimeReader_v${{ env.VERSION }}.apk
          asset_name: NfcAimeReader_v${{ env.VERSION }}.apk
          asset_content_type: application/vnd.android.package-archive

  windows-build-dll:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # 使用 PowerShell 读取 release.json 中的版本信息
      - name: Extract version information (Windows)
        id: get_version_info
        shell: pwsh
        run: |
          $json = Get-Content .github/release.json | ConvertFrom-Json
          Write-Output "VERSION=$($json.version)" >> $env:GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Build and Publish .NET Project
        run: dotnet publish -c Release -r win-x64 -p:Version=${{ env.VERSION }} NfcAimeReaderDLL/NfcAimeReaderDLL.csproj

      - name: Upload DLL to Release Draft
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-linux.outputs.upload_url }}
          asset_path: NfcAimeReaderDLL/bin/Release/net9.0/win-x64/publish/NfcAimeReaderDLL.dll
          asset_name: aimeio_nfcreader_v${{ env.VERSION }}.dll
          asset_content_type: application/octet-stream